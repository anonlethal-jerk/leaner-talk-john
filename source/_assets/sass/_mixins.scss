
@mixin random-select-color(){
	$t_color: rgb(random(255), random(255), random(255));
	background: $t_color;
	$t_inverse: invert($t_color);
	@if lightness($t_color) > 50 {
		color: scale-color($t_inverse, $lightness: -60%);
	} @else {
		color: scale-color($t_inverse, $lightness: 60%);
	}
}





// // For loop inumerator
// $num: 0;

// // LINEAR to LOGARITHMIC and vicev-ersa
// @function lin2log($n) { @if $n <= 0.0031308 { @return $n * 12.92; } @else { @return 1.055 * pow($n,1/2.4) - 0.055; } }
// @function log2lin($n) { @if $n <= 0.04045 { @return $n / 12.92; } @else { @return pow((($n + 0.055)/1.055),2.4); } }

// // sRGB BT-709 BRIGHTNESS
// @function brightness($c) {
// 	$rlin: log2lin(red($c)/255);
// 	$glin: log2lin(green($c)/255);
// 	$blin: log2lin(blue($c)/255);
// 	@return lin2log(0.2126 * $rlin + 0.7152 * $glin + 0.0722 * $blin) * 100;
// }


// // Compares contrast of a given color to the light/dark arguments and returns whichever is most "contrasty"
// @function color-contrast($color, $dark: $dark-text-default, $light: $light-text-default) {
//   @if $color == null {
//     @return null;
//   }
//   @else {
//     $color-brightness: brightness($color);
//     $light-text-brightness: brightness($light);
//     $dark-text-brightness: brightness($dark);

//     @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);
//   }
// }

// // Main styles
// @each $color in $color1, $color2, $color3 {
//   $num: $num + 1;
//   .color#{$num} {
//     background: $color;
//     color: color-contrast($color);
//   }
// }
